################################################################################
# Copyright 2022 highstreet technologies GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
version: '3.8'
services:

  persistence:
    image: ${PERSISTENCE_IMAGE}
    container_name: persistence
    hostname: persistence
    environment:
      discovery.type: single-node
    networks:
      smo:

  zookeeper:
    image: ${ZOOKEEPER_IMAGE}
    container_name: zookeeper
    hostname: zookeeper
    ports:
    - 2181:2181
    environment:
      ZOOKEEPER_REPLICAS: 1
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 5
      ZOOKEEPER_INIT_LIMIT: 10
      ZOOKEEPER_MAX_CLIENT_CNXNS: 200
      ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT: 3
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: 24
      ZOOKEEPER_CLIENT_PORT: 2181
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/zookeeper/secrets/jaas/zk_server_jaas.conf -Dzookeeper.kerberos.removeHostFromPrincipal=true -Dzookeeper.kerberos.removeRealmFromPrincipal=true -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider -Dzookeeper.requireClientAuthScheme=sasl
      ZOOKEEPER_SERVER_ID:
    volumes:
    - ./zookeeper/zk_server_jaas.conf:/etc/zookeeper/secrets/jaas/zk_server_jaas.conf
    networks:
      smo:

  kafka:
    image: ${KAFKA_IMAGE}
    container_name: kafka
    hostname: kafka
    ports:
    - 9092:9092
    environment:
      enableCadi: 'false'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 40000
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 40000
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL_PLAINTEXT:PLAINTEXT,EXTERNAL_PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL_PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: INTERNAL_PLAINTEXT://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL_PLAINTEXT
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/jaas/zk_client_jaas.conf
      KAFKA_ZOOKEEPER_SET_ACL: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # Reduced the number of partitions only to avoid the timeout error for the first subscribe call in slow environment
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 1
    volumes:
      -  ./kafka/zk_client_jaas.conf:/etc/kafka/secrets/jaas/zk_client_jaas.conf
    depends_on:
     - zookeeper
    networks:
      smo:

  messages:
    container_name: messages
    hostname: messages
    image: ${MESSAGES_IMAGE}
    ports:
    - ${MESSAGES_PORT}:3905
    environment:
      enableCadi: 'false'
    volumes:
    - ./messages/MsgRtrApi.properties:/appl/dmaapMR1/bundleconfig/etc/appprops/MsgRtrApi.properties
    - ./messages/logback.xml:/appl/dmaapMR1/bundleconfig/etc/logback.xml
    - ./messages/cadi.properties:/appl/dmaapMR1/etc/cadi.properties
    depends_on:
    - zookeeper
    - kafka
    networks:
      dmz:
      smo:

  ves-collector:
    image: ${VES_COLLECTOR_IMAGE}-configured
    build:
      context: ./ves-collector
      args:
        - BASEIMAGE=${VES_COLLECTOR_IMAGE}
    container_name: ves-collector
    hostname: ves-collector
    healthcheck:
      test: curl -k -u ${VES_ENDPOINT_USERNAME}:${VES_ENDPOINT_PASSWORD} ${VES_ENDPOINT_PROTOCOL}://localhost:${VES_ENDPOINT_PORT} || exit 1
      start_period: 1s
      interval: 5s
      timeout: 4s
      retries: 5
    environment:
      DMAAPHOST: messages
    ports:
    - ${VES_ENDPOINT_PORT}:8443
    volumes:
    - ./ves-collector/collector.properties:/opt/app/VESCollector/etc/collector.properties
    - ./ves-collector/ves-dmaap-config.json:/opt/app/VESCollector/etc/ves-dmaap-config.json
    networks:
      dmz:
      smo:
      default:
        ipv6_address: ${VES_COLLECTOR_OAM_IPv6}

  controller:
    image: ${SDNC_IMAGE}
    container_name: controller
    hostname: controller
    healthcheck:
      test: wget -U ${ADMIN_USERNAME}:${ADMIN_PASSWORD} --no-verbose --tries=1 --spider http://localhost:${SDNC_REST_PORT}/ready || exit 1
      start_period: 60s
      interval: 10s
      timeout: 8s
      retries: 10
    ports:
    - ${SDNC_REST_PORT}:8181
    - 4334:4334
    - 4335:4335
    environment:
      ENABLE_ODL_CLUSTER: false
      ENABLE_OAUTH: false
      ODL_CERT_DIR: ${SDNC_CERT_DIR}
      ODL_ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      SDNC_CONFIG_DIR: /opt/onap/ccsdk/data/properties
      SDNC_REPLICAS: 0
      CCSDK_REPLICAS: 0
      DOMAIN: ""
      SDNRWT: true
      SDNRONLY: true
      SDNRINIT: true
      SDNRDM: true
      SDNRDBURL: http://persistence:9200
      SDNR_NETCONF_CALLHOME_ENABLED: true
      A1_ADAPTER_NORTHBOUND: false
      JAVA_OPTS: -Xms256m -Xmx4g
      # IDENTITY_PROVIDER_URL: ${IDENTITY_PROVIDER_URL}
      SDNC_WEB_URL: https://odlux:${SDNC_WEB_PORT}
      SDNR_VES_COLLECTOR_ENABLED: true
      SDNR_VES_COLLECTOR_TLS_ENABLED: true
      SDNR_VES_COLLECTOR_TRUST_ALL_CERTS: true
      SDNR_VES_COLLECTOR_IP: ves-collector
      SDNR_VES_COLLECTOR_PORT: $VES_ENDPOINT_PORT
      SDNR_VES_COLLECTOR_VERSION: v7
      SDNR_VES_COLLECTOR_REPORTING_ENTITY_NAME: ONAP SDN-R
      SDNR_VES_COLLECTOR_EVENTLOG_MSG_DETAIL: LONG
      SDNR_VES_COLLECTOR_USERNAME: ${VES_ENDPOINT_USERNAME}
      SDNR_VES_COLLECTOR_PASSWORD: ${VES_ENDPOINT_PASSWORD}
    volumes:
    - ./controller/oauth-aaa-app-config.xml:/opt/onap/sdnc/data/oauth-aaa-app-config.xml
    - ./controller/oauth-provider.config.json:/opt/opendaylight/etc/oauth-provider.config.json
    - ./controller/devicemanager.properties:/opt/opendaylight/etc/devicemanager.properties
    - ./controller/mountpoint-registrar.properties:/opt/opendaylight/etc/mountpoint-registrar.properties
    - ./controller/certs/certs.properties:${SDNC_CERT_DIR}/certs.properties
    - ./controller/certs/keys0.zip:${SDNC_CERT_DIR}/keys0.zip
    networks:
      dmz:
      smo:
      default:
        ipv6_address: ${SDNC_OAM_IPv6}

  odlux:
    image: ${SDNC_WEB_IMAGE}
    container_name: odlux
    hostname: odlux
    ports:
    - ${SDNC_WEB_PORT}:${SDNC_WEB_PORT}
    environment:
      ENABLE_OAUTH: false
      WEBPROTOCOL: HTTPS
      WEBPORT: ${SDNC_WEB_PORT}
      SDNRPROTOCOL: http
      SDNRHOST: controller
      SDNRPORT: ${SDNC_REST_PORT}
      SSL_CERT_DIR: /opt/app/osaaf/local/certs
      SSL_CERTIFICATE: cert.pem
      SSL_CERTIFICATE_KEY: key.pem
    volumes:
    - ./web:/opt/app/osaaf/local/certs
    depends_on:
      controller:
        condition: service_healthy
    networks:
      dmz:
      smo:

  flows:
    image: ${FLOWS_IMAGE}-configured
    build:
      context: ./flows
      args:
        - BASEIMAGE=${FLOWS_IMAGE}
    container_name: flows
    hostname: flows
    ports:
    - 1880:1880
    environment:
      APP_VENDOR: ${APP_VENDOR}
      APP_SOURCE: ${APP_SOURCE}
      APP_NETWORK_FUNCTION_ID: ${APP_NETWORK_FUNCTION_ID}

      SDN_CONTROLLER_PROTOCOL: ${SDN_CONTROLLER_PROTOCOL}
      SDN_CONTROLLER_HOST: ${SDNC_OAM_IPv4}
      SDN_CONTROLLER_PORT: ${SDNC_WEB_PORT}
      SDN_CONTROLLER_USERNAME: ${ADMIN_USERNAME}
      SDN_CONTROLLER_PASSWORD: ${ADMIN_PASSWORD}

      VES_COMMON_HEADER_VERSION: ${VES_COMMON_HEADER_VERSION}
      VES_ENDPOINT_PROTOCOL: ${VES_ENDPOINT_PROTOCOL}
      VES_ENDPOINT_IP: ${VES_COLLECTOR_OAM_IPv4}
      VES_ENDPOINT_PORT: ${VES_ENDPOINT_PORT}
      VES_ENDPOINT_AUTH_METHOD: ${VES_ENDPOINT_AUTH_METHOD}
      VES_ENDPOINT_USERNAME: ${VES_ENDPOINT_USERNAME}
      VES_ENDPOINT_PASSWORD: ${VES_ENDPOINT_PASSWORD}

      MESSAGES_PORT: ${MESSAGES_PORT}

    volumes:
    - ./flows/data:/data
    depends_on:
      controller:
        condition: service_healthy
      ves-collector:
        condition: service_healthy
    networks:
      dmz:

networks:
  dmz:
    driver: bridge
    name: dmz
    enable_ipv6: false
  smo:
    driver: bridge
    name: smo
    enable_ipv6: true
    ipam:
      driver: default
      config:
      - subnet:  ${NETWORK_SUBNET_SMO}
        gateway: ${NETWORK_GATEWAY_SMO}
  default:
    driver: bridge
    name: oam
    enable_ipv6: true
    ipam:
      driver: default
      config:
      - subnet:  ${NETWORK_SUBNET_OAM_IPv6}
        gateway: ${NETWORK_GATEWAY_OAM_IPv6}
